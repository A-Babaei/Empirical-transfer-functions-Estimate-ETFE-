clc;clear;close all;
% A.Babaei
%  Estimates the transfer function (ETFE) METHOD

function [Gest, Gests] = etfe_method(u, y, windows)
%   Inputs:
%   u - Input signal
%   y - Output signal
%   windows - Vector of window sizes for smoothing
%   Outputs:
%   Gest - Original ETFE estimate
%   Gests - Smoothed ETFE estimates for each window size

% Check if windows is provided, otherwise use default
if nargin < 3 || isempty(windows)
    windows = [10, 50, 200];
end

N = length(u);

% Compute original ETFE
U = fft(u);
Y = fft(y);
F = 2*pi*(0:(N-1))/N;
Gest = Y ./ U;

% Initialize for smoothed estimates
Gests = zeros(N, length(windows));

% Smoothing with Parzen Windows
for i = 1:length(windows)
    gamma = windows(i);
    p = parzenwin(gamma)';
    pad = zeros(1, N-gamma);
    weight = [p(1, gamma/2+1:gamma) pad p(1, 1:gamma/2)];
    
    estgd = zeros(1, N);
    estgn = zeros(1, N);
    
    for j = 1:N
        cirw = circshift(weight, j);
        for k = 1:N
            U2 = abs(U(k)).^2;
            estgn(j) = estgn(j) + cirw(k) * U2 * Gest(k);
            estgd(j) = estgd(j) + cirw(k) * U2;
        end
    end
    
    Gests(:, i) = estgn ./ estgd;
end

end
